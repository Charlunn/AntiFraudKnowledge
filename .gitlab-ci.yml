image: docker:latest

services:
  - docker:dind

stages:
  - deploy

deploy_backend:
  stage: deploy
  script:
    - echo "Backend files changed. Restarting backend service..."
    - apk add --no-cache openssh-client # 使用 apk 安装 openssh-client
    - ssh user@your_server_ip "cd /path/to/your/project && docker-compose down backend && docker-compose up -d backend" # 请将 your_server_ip 替换为实际服务器IP或主机名，并确保SSH配置正确
  only:
    changes:
      - backend/**/*
    refs:
      - main

deploy_frontend:
  stage: deploy
  script:
    - echo "Frontend files changed. Restarting frontend service..."
    - apk add --no-cache openssh-client # 使用 apk 安装 openssh-client
    - ssh user@your_server_ip "cd /path/to/your/project && docker-compose down frontend && docker-compose up -d frontend" # 请将 your_server_ip 替换为实际服务器IP或主机名，并确保SSH配置正确
  only:
    changes:
      - frontend/**/*
    refs:
      - main

deploy_neo4j:
  stage: deploy
  script:
    - echo "Neo4j data or configuration changed. Restarting neo4j service..."
    - apk add --no-cache openssh-client # 使用 apk 安装 openssh-client
    - ssh user@your_server_ip "cd /path/to/your/project && docker-compose down neo4j && docker-compose up -d neo4j" # 重启 neo4j 服务，请将 your_server_ip 替换为实际服务器IP或主机名，并确保SSH配置正确
  only:
    changes:
      - db/neo4j/**/* # 当 db/neo4j 目录下的任何文件发生更改时触发
    refs:
      - main # 只在 main 分支触发

deploy_mysql:
  stage: deploy
  script:
    - echo "MySQL data or configuration changed. Restarting mysql service..."
    - apk add --no-cache openssh-client # 使用 apk 安装 openssh-client
    - ssh user@your_server_ip "cd /path/to/your/project && docker-compose down mysql && docker-compose up -d mysql" # 重启 mysql 服务，请将 your_server_ip 替换为实际服务器IP或主机名，并确保SSH配置正确
  only:
    changes:
      - db/mysql/**/* # 当 db/mysql 目录下的任何文件发生更改时触发
    refs:
      - main # 只在 main 分支触发
