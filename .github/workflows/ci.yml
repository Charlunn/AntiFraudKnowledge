name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    # 你的机器是自托管 runner
    runs-on: [self-hosted, main]

    steps:
      # ------- 仅给 GitHub 配置代理（国内流量不走代理） -------
      - name: Setup Git proxy for GitHub only
        run: |
          git config --global http.https://github.com.proxy http://127.0.0.1:7890
          git config --global http.https://raw.githubusercontent.com.proxy http://127.0.0.1:7890
          git config --global http.https://objects.githubusercontent.com.proxy http://127.0.0.1:7890
          git config --global http.https://actions.githubusercontent.com.proxy http://127.0.0.1:7890

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # -------------------- Frontend --------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Use npm mirror in China
        run: npm config set registry https://registry.npmmirror.com/

      - name: Install and build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # -------------------- Backend --------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      # mysqlclient 构建所需系统依赖（关键：pkg-config）
      - name: Install system dependencies (for mysqlclient)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            default-libmysqlclient-dev
          # 如果后端连接 MariaDB，请改为：
          # sudo apt-get install -y build-essential pkg-config libmariadb-dev-compat libmariadb-dev

      - name: Configure pip mirror (CN)
        run: |
          python -m pip install --upgrade pip
          pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple

      - name: Install backend requirements
        working-directory: backend
        run: pip install -r requirements.txt

      - name: Compile Python files
        run: python -m compileall backend

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: [self-hosted, main]

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            cd /path/to/AntiFraudKnowledge
            git pull
            docker compose pull
            docker compose up -d
